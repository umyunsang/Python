# 함수 정의 및 호출 예제
# 함수는 입력값(파라미터)을 받아 지정된 처리를 수행한 후 결과를 반환할 수 있습니다.
# 함수의 기본 문법:
# def 함수이름(입력1, 입력2, ...):
#     처리코드
#     ...
#     return 반환값

# 1. 입력값과 반환값이 없는 함수
def my_func1():
    print('my_func1 호출')  # 호출 시 단순히 문자열 출력

my_func1()  # 함수 호출

# 2. 입력값이 하나만 있는 함수
def my_func2(v1):  # v1: 함수에 전달된 파라미터
    print(f'my_func2 호출 : {v1}')  # 전달받은 값을 출력

a = 100
my_func2(a)  # a를 함수에 전달

# 3. 입력값이 여러 개 있는 함수
def my_func3(v1, v2, v3):
    res = v1 + v2 - v3  # 입력값을 이용한 계산
    print(f'my_func3 : {v1} + {v2} - {v3} = {res}')  # 계산 결과 출력

my_func3(10, 20, 5)  # 10, 20, 5를 함수에 전달

# 4. 반환값이 하나인 함수
def my_func4(v1, v2, v3):
    res = v1 + v2 - v3  # 입력값을 이용한 계산
    print(f'my_func4 : {v1} + {v2} - {v3} = {res}')  # 계산 결과 출력
    return res  # 계산 결과를 반환

r1 = my_func4(10, 20, 5)  # 함수 호출 결과를 변수에 저장
print(f'my_func4의 결과 : {r1}')  # 반환된 결과 출력

# 5. 반환값이 여러 개인 함수
def my_func5(num1, num2):
    mul = num1 * num2  # 두 입력값의 곱 계산
    div = num1 / num2  # 두 입력값의 나눗셈 계산
    print(f'my_func5 : {num1}, {num2}')  # 입력값 출력
    return mul, div  # 두 계산 결과를 튜플 형태로 반환

r1, r2 = my_func5(5, 3)  # 함수 호출 결과를 두 변수에 저장
print(f'my_func5의 결과 : {r1}, {r2}')  # 반환된 두 결과를 출력

# 참고: 모든 프로그래밍 언어에서 함수는 하나의 반환값만 반환할 수 있지만,
# 파이썬에서는 튜플을 사용하여 여러 값을 반환할 수 있습니다.
